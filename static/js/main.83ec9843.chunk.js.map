{"version":3,"sources":["api/index.js","components/Joke.js","components/JokeForm.js","App.js","index.js"],"names":["getJoke","custom","type","category","flags","a","customArray","Object","keys","filter","key","parameter","join","blackFlags","url","axios","get","params","blacklistFlags","response","console","log","data","Joke","joke","newJoke","useState","delivery","setDelivery","useEffect","style","width","height","display","flexDirection","justifyContent","className","setup","margin","onClick","toUpperCase","JokeForm","categoryHandler","typeHandler","customHandler","flagsHandler","handleJoke","marginRight","padding","borderRadius","fontWeight","value","onChange","name","checked","Programming","Dark","Pun","Spooky","Misc","nsfw","religious","political","racist","sexist","explicit","App","setJoke","setCategory","setType","setFlages","setCustom","then","e","target","prevValues","textAlign","alignItems","fontSize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83ec9843.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n\r\nexport const getJoke = async (custom, type, category, flags) => {\r\n    \r\n    const customArray = Object.keys(custom).filter((key) => custom[key])\r\n    const parameter = customArray.join()\r\n\r\n    const blackFlags = Object.keys(flags).filter((key) => flags[key])\r\n\r\n\r\n    let url = \"https://v2.jokeapi.dev/joke/Any\"\r\n    \r\n    try {\r\n        if (category !== \"Any\") {\r\n            url = `https://v2.jokeapi.dev/joke/${parameter}`\r\n        }\r\n\r\n        const response = await axios.get(url, { params: { type: type, blacklistFlags: blackFlags.join() } })  \r\n        console.log('blackFlags', blackFlags.join())\r\n        //console.log(flags)\r\n        console.log(response.data)\r\n        return response.data\r\n        \r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nconst Joke = ({ joke }) => {\r\n\r\n    const newJoke = joke\r\n    const [delivery, setDelivery] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setDelivery(false)\r\n    }, [newJoke])\r\n    \r\n    const handleDelivery = () => {\r\n        setDelivery(!delivery)\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '85%', height: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }} >\r\n            { joke && joke.type === 'twopart' ? \r\n                <>\r\n                    <p className='joke-line'>{joke.setup}</p>\r\n                    { delivery ? <p className='delivery' style={{ margin: '13px' }} >{joke.delivery}</p> : <button className='btn' onClick={handleDelivery} >Reveal Punchline</button> }\r\n                    <div className='joke-info'>\r\n                        <p>{joke.category}</p>\r\n                        <p>{joke.type.toUpperCase()}</p>\r\n\r\n                    </div>\r\n                </> : <>\r\n                {/* <p>it is not a twoparts joke</p> */}\r\n                { joke ? (\r\n                    <>\r\n                        <p className='joke-line' >{joke.joke}</p>\r\n                        <div className='joke-info'>\r\n                            <p>{joke.category}</p>\r\n                            { joke.type && <p>{joke.type.toUpperCase()}</p> }\r\n                            \r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    null\r\n                )}\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Joke\r\n","import React from 'react'\r\n\r\nconst JokeForm = ({ category, type, flags, custom, categoryHandler, typeHandler, customHandler, flagsHandler, handleJoke }) => {\r\n    \r\n    return (\r\n        <div>\r\n            <h2>Category is { category }</h2>\r\n            <label style={{ marginRight: '10px' }}>Choose category</label>\r\n            <select style={{ padding: '4px', borderRadius: '3px', fontWeight: 'bold' }} value={category} onChange={categoryHandler} >\r\n                <option value=\"Any\" >Any</option>\r\n                <option value=\"Custom\" >Custom</option>\r\n            </select>\r\n\r\n            {\r\n                category === \"Custom\" && (\r\n                    <div>\r\n                        <p style={{ fontWeight: 'bold' }} >Choose types of jokes</p>\r\n                        <div className='flags'>\r\n                            <input name='Programming' type='checkbox' checked={custom.Programming} onChange={customHandler} /> <label>Programming</label>\r\n                            <input name='Dark' type='checkbox' checked={custom.Dark} onChange={customHandler} /> <label>Dark</label>\r\n                            <input name='Pun' type='checkbox' checked={custom.Pun} onChange={customHandler} /> <label>Pun</label>\r\n                            <input name='Spooky' type='checkbox' checked={custom.Spooky} onChange={customHandler} /> <label>Spooky</label>\r\n                            <input name='Misc' type='checkbox' checked={custom.Misc} onChange={customHandler} /> <label>Misc</label>\r\n\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            <h2>Type is { type }</h2>\r\n            <label style={{ marginRight: '10px' }}>Choose type</label>\r\n            <select style={{ padding: '4px', borderRadius: '3px', fontWeight: 'bold' }} value={type} onChange={typeHandler} >\r\n                <option value=\"Single\" >Single</option>\r\n                <option value=\"TwoPart\" >Two Parts</option>\r\n            </select>           \r\n            <p style={{ fontWeight: 'bold' }} >Tick to blacklist the following jokes</p>\r\n            <div className='flags' >\r\n                <input type='checkbox' name='nsfw' checked={flags.nsfw} onChange={flagsHandler} /> <label>nsfw</label>\r\n                <input type='checkbox' name='religious' checked={flags.religious} onChange={flagsHandler} /> <label>religious</label>\r\n                <input type='checkbox' name='political' checked={flags.political} onChange={flagsHandler} /> <label>political</label>\r\n                <input type='checkbox' name='racist' checked={flags.racist} onChange={flagsHandler} /> <label>racist</label>\r\n                <input type='checkbox' name='sexist' checked={flags.sexist} onChange={flagsHandler} /> <label>sexist</label>\r\n                <input type='checkbox' name='explicit' checked={flags.explicit} onChange={flagsHandler} /> <label>explicit</label>\r\n            </div>\r\n            <button style={{ margin: '30px' }} className=\"joke-btn\" onClick={handleJoke} type=\"button\">\r\n                Get Joke\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JokeForm\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { getJoke } from \"./api\";\r\nimport Joke from \"./components/Joke\";\r\nimport JokeForm from \"./components/JokeForm\";\r\n\r\nfunction App() {\r\n  const [joke, setJoke] = useState({});\r\n\r\n  const [category, setCategory] = useState(\"Any\");\r\n  const [type, setType] = useState(\"Single\");\r\n\r\n  const [flags, setFlages] = useState({\r\n    nsfw: true,\r\n    religious: true,\r\n    political: true,\r\n    explicit: true,\r\n    racist: true,\r\n    sexist: true,\r\n  });\r\n\r\n  const [custom, setCustom] = useState({\r\n    Programming: true,\r\n    Dark: false,\r\n    Pun: false,\r\n    Spooky: false,\r\n    Misc: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    handleJoke()   \r\n  }, [])\r\n  \r\n\r\n  const handleJoke = () => {\r\n    getJoke(custom, type, category, flags).then((data) => {\r\n      setJoke(data)\r\n    })\r\n  }\r\n\r\n  const categoryHandler = (e) => {\r\n    setCategory(e.target.value);\r\n  };\r\n\r\n  const typeHandler = (e) => {\r\n    setType(e.target.value);\r\n  };\r\n\r\n  const customHandler = (e) => {\r\n    setCustom((prevValues) => {\r\n      return { ...prevValues, [e.target.name]: e.target.checked };\r\n    });\r\n  };\r\n\r\n  const flagsHandler = (e) => {\r\n    setFlages((prevValues) => {\r\n      return { ...prevValues, [e.target.name]: e.target.checked };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n        <div className=\"joke-form\">\r\n\r\n          <JokeForm\r\n            className='joke-form'\r\n            category={category}\r\n            type={type}\r\n            flags={flags}\r\n            custom={custom}\r\n            categoryHandler={categoryHandler}\r\n            typeHandler={typeHandler}\r\n            customHandler={customHandler}\r\n            flagsHandler={flagsHandler}\r\n            handleJoke={handleJoke}\r\n          />\r\n        </div>\r\n        <div className=\"joke\">\r\n          <Joke  joke={joke} />\r\n        </div>\r\n      </div>\r\n      <div style={{ padding: '50px', textAlign: 'center', justifyContent: 'center', alignItems: 'center', margin: 'auto' }}>\r\n        <p style={{ fontSize: '32px', margin: 'auto' }} >The joke app use JOKE API to fetch jokes. For responsiveness of the app, the joke form and joke content are rendered as column when the screen width is lower than 820px.</p>\r\n      </div>\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}